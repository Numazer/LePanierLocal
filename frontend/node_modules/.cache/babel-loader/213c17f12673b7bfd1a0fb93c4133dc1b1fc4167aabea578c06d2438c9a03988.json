{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\LePanierLocal\\\\frontend\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n// import 'bootstrap-icons/font/bootstrap-icons.css';\n//import MyAppNav from './Nav';\n//import NavForm from './NavForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/login', {\n        email: email,\n        password: password\n      }, {\n        headers: {\n          \"Content-Type\": 'application/ld+json'\n        }\n      });\n      const token = response.data.token;\n      const user_id = response.data.user_id;\n      const type = response.data.type; // 'user' ou 'trader'\n\n      if (token) {\n        // Si c'est un trader\n        if (type === 'trader') {\n          localStorage.setItem('trader_id', user_id); // Stocker l'ID du trader\n          localStorage.setItem('user_id', null); // Mettre user_id à null\n        }\n        // Si c'est un utilisateur classique\n        else if (type === 'user') {\n          localStorage.setItem('user_id', user_id); // Stocker l'ID du user\n          localStorage.setItem('trader_id', null); // Mettre trader_id à null\n        }\n        localStorage.setItem('token', token); // Stocker le token\n        setSuccessMessage(\"Login successful!\");\n      } else {\n        setErrorMessage(\"Token not received.\");\n      }\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      if (error.response && error.response.data.error) {\n        setErrorMessage('Probleme de connexion');\n      } else {\n        setErrorMessage('An error occurred during login.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 38\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"SRKwS6HA4ZV+jAWrWUbCofyAWto=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","post","headers","token","data","user_id","type","localStorage","setItem","error","className","children","NavForm","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/wamp64/www/LePanierLocal/frontend/src/Components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n// import 'bootstrap-icons/font/bootstrap-icons.css';\r\n//import MyAppNav from './Nav';\r\n//import NavForm from './NavForm';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:8000/login',\r\n                {\r\n                    email: email,\r\n                    password: password,\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": 'application/ld+json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            const token = response.data.token;\r\n            const user_id = response.data.user_id;\r\n            const type = response.data.type; // 'user' ou 'trader'\r\n\r\n            if (token) {\r\n                // Si c'est un trader\r\n                if (type === 'trader') {\r\n                    localStorage.setItem('trader_id', user_id); // Stocker l'ID du trader\r\n                    localStorage.setItem('user_id', null); // Mettre user_id à null\r\n                } \r\n                // Si c'est un utilisateur classique\r\n                else if (type === 'user') {\r\n                    localStorage.setItem('user_id', user_id); // Stocker l'ID du user\r\n                    localStorage.setItem('trader_id', null); // Mettre trader_id à null\r\n                }\r\n\r\n                localStorage.setItem('token', token); // Stocker le token\r\n                setSuccessMessage(\"Login successful!\");\r\n            } else {\r\n                setErrorMessage(\"Token not received.\");\r\n            }\r\n\r\n            setEmail('');\r\n            setPassword('');\r\n        } catch (error) {\r\n            if (error.response && error.response.data.error) {\r\n                setErrorMessage('Probleme de connexion');\r\n            } else {\r\n                setErrorMessage('An error occurred during login.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <NavForm />\r\n            <div className=\"login-container\">\r\n                <h2 className=\"text-center mb-4\">Login</h2>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"email\" className=\"form-label\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n                    {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}