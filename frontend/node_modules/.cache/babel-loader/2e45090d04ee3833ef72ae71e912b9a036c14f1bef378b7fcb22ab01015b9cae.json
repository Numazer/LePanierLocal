{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wampp\\\\SymfonyProjects\\\\LePanierLocal\\\\frontend\\\\src\\\\components\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MyImage from '../Images/lePanier.png';\n\n/* const chemin = '/';\r\nconst NomButton = 'Déconnexion'; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = ({\n  brandName,\n  navItems,\n  searchValue,\n  setSearchValue,\n  isLoggedIn,\n  setIsLoggedIn\n}) => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: MyImage,\n        alt: \"Logo le panier local dans la navbar\",\n        height: 75,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 1\n      }, this), navItems.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: item.path,\n          children: item.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n_c = NavBar;\nNavBar.propTypes = {\n  brandName: PropTypes.string.isRequired,\n  navItems: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired,\n  searchValue: PropTypes.string.isRequired,\n  setSearchValue: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","NavLink","PropTypes","MyImage","jsxDEV","_jsxDEV","NavBar","brandName","navItems","searchValue","setSearchValue","isLoggedIn","setIsLoggedIn","_s","isMenuOpen","setIsMenuOpen","toggleMenu","children","src","alt","height","width","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","to","path","label","_c","propTypes","string","isRequired","arrayOf","shape","func","bool","$RefreshReg$"],"sources":["D:/Wampp/SymfonyProjects/LePanierLocal/frontend/src/components/NavBar.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MyImage from '../Images/lePanier.png';\r\n\r\n/* const chemin = '/';\r\nconst NomButton = 'Déconnexion'; */\r\n\r\nconst NavBar = ({ brandName, navItems, searchValue, setSearchValue, isLoggedIn, setIsLoggedIn }) => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    return (\r\n        <nav>\r\n            \r\n            {/* <button onClick={toggleMenu}>\r\n                ☰\r\n            </button> */}\r\n            <div>\r\n<img src={MyImage} alt=\"Logo le panier local dans la navbar\" height={75} width={100}/>\r\n                {navItems.map((item, index) => {\r\n                    \r\n                    return (\r\n                        <NavLink \r\n                            key={index} \r\n                            to={item.path} \r\n                        >\r\n                            {item.label}\r\n                        </NavLink>\r\n                    );\r\n                })}\r\n                    \r\n                   \r\n                \r\n            </div>\r\n            \r\n        </nav>\r\n    );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  \r\n    brandName: PropTypes.string.isRequired,\r\n    navItems: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            path: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    searchValue: PropTypes.string.isRequired,\r\n    setSearchValue: PropTypes.func.isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    setIsLoggedIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NavBar;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,wBAAwB;;AAE5C;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIT,OAAA;IAAAY,QAAA,eAKIZ,OAAA;MAAAY,QAAA,gBACZZ,OAAA;QAAKa,GAAG,EAAEf,OAAQ;QAACgB,GAAG,EAAC,qCAAqC;QAACC,MAAM,EAAE,EAAG;QAACC,KAAK,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACrEjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAE3B,oBACIvB,OAAA,CAACJ,OAAO;UAEJ4B,EAAE,EAAEF,IAAI,CAACG,IAAK;UAAAb,QAAA,EAEbU,IAAI,CAACI;QAAK,GAHNH,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIL,CAAC;MAElB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAID;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAACZ,EAAA,CAjCIP,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAmCZA,MAAM,CAAC2B,SAAS,GAAG;EAEf1B,SAAS,EAAEL,SAAS,CAACgC,MAAM,CAACC,UAAU;EACtC3B,QAAQ,EAAEN,SAAS,CAACkC,OAAO,CACvBlC,SAAS,CAACmC,KAAK,CAAC;IACZP,IAAI,EAAE5B,SAAS,CAACgC,MAAM,CAACC,UAAU;IACjCJ,KAAK,EAAE7B,SAAS,CAACgC,MAAM,CAACC;EAC5B,CAAC,CACL,CAAC,CAACA,UAAU;EACZ1B,WAAW,EAAEP,SAAS,CAACgC,MAAM,CAACC,UAAU;EACxCzB,cAAc,EAAER,SAAS,CAACoC,IAAI,CAACH,UAAU;EACzCxB,UAAU,EAAET,SAAS,CAACqC,IAAI,CAACJ,UAAU;EACrCvB,aAAa,EAAEV,SAAS,CAACoC,IAAI,CAACH;AAClC,CAAC;AAED,eAAe7B,MAAM;AAAC,IAAA0B,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}