{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\LePanierLocal\\\\frontend\\\\src\\\\Components\\\\MyTraderRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MyForm from './MyForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTraderRegister = () => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Champs pour le trader (commerçant)\n  const fields = [{\n    name: 'name',\n    label: 'Nom de la Boutique : ',\n    type: 'text',\n    placeholder: 'Entrer le nom de votre boutique',\n    required: true\n  }, {\n    name: 'address',\n    label: 'Adresse Postale : ',\n    type: 'text',\n    placeholder: 'Entrer votre adresse postale',\n    required: true\n  }, {\n    name: 'city',\n    label: 'Ville : ',\n    type: 'text',\n    placeholder: 'Entrer votre ville',\n    required: true\n  }, {\n    name: 'phone',\n    label: 'Téléphone : ',\n    type: 'tel',\n    placeholder: 'Entrer votre N° tel',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email : ',\n    type: 'email',\n    placeholder: 'Entrer votre email',\n    required: true\n  }, {\n    name: 'siret',\n    label: 'SIRET : ',\n    type: 'text',\n    placeholder: 'Entrer votre n° de SIRET',\n    required: true\n  },\n  // { name: 'category', label: 'Catégorie : ', type: 'select', apiEndpoint: '/api/categories', required: true },\n  // { name: 'sub_category', label: 'Sous Catégorie : ', type: 'select', apiEndpoint: '/api/subcategories', required: true },\n  {\n    name: 'password',\n    label: 'Mot de Passe : ',\n    type: 'password',\n    placeholder: 'Écrire votre mot de passe',\n    required: true\n  }, {\n    name: 'confirm-password',\n    label: 'Confirmer le Mot de Passe : ',\n    type: 'password',\n    placeholder: 'Retapez votre mot de passe',\n    required: true\n  }, {\n    name: 'image',\n    label: 'Photo de Profil : ',\n    type: 'file',\n    required: false\n  }];\n\n  // Fonction de soumission\n  const handleSubmit = async formData => {\n    // Validation du mot de passe\n    if (formData.password !== formData['confirm-password']) {\n      setErrorMessage('Les mots de passe ne correspondent pas.');\n      return;\n    }\n    try {\n      const formDataToSend = new FormData();\n\n      // Ajouter chaque champ au FormData\n      for (const key in formData) {\n        if (formData[key] instanceof File) {\n          formDataToSend.append(key, formData[key]);\n        } else {\n          formDataToSend.append(key, formData[key]);\n        }\n      }\n\n      // Soumission des données via axios\n      const response = await axios.post('http://localhost:8000/registerTrader', {\n        headers: {\n          'Content-Type': 'multipart/form-data' // On utilise FormData pour envoyer les fichiers\n        }\n      });\n      setSuccessMessage(response.data.message);\n      setErrorMessage('');\n    } catch (error) {\n      if (error.response && error.response.data.errors) {\n        setErrorMessage(error.response.data.errors.join(', '));\n      } else {\n        setErrorMessage('Une erreur est survenue lors de l\\'inscription du commerçant.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inscription Commer\\xE7ant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyForm, {\n      fields: fields,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTraderRegister, \"GYTV4SY4xbg5C5qjssoxZ4/riWg=\");\n_c = MyTraderRegister;\nexport default MyTraderRegister;\nvar _c;\n$RefreshReg$(_c, \"MyTraderRegister\");","map":{"version":3,"names":["React","useState","axios","MyForm","jsxDEV","_jsxDEV","MyTraderRegister","_s","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fields","name","label","type","placeholder","required","handleSubmit","formData","password","formDataToSend","FormData","key","File","append","response","post","headers","data","message","error","errors","join","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","_c","$RefreshReg$"],"sources":["C:/wamp64/www/LePanierLocal/frontend/src/Components/MyTraderRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport MyForm from './MyForm';\r\n\r\nconst MyTraderRegister = () => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Champs pour le trader (commerçant)\r\n  const fields = [\r\n    { name: 'name', label: 'Nom de la Boutique : ', type: 'text', placeholder: 'Entrer le nom de votre boutique', required: true },\r\n    { name: 'address', label: 'Adresse Postale : ', type: 'text', placeholder: 'Entrer votre adresse postale', required: true },\r\n    { name: 'city', label: 'Ville : ', type: 'text', placeholder: 'Entrer votre ville', required: true },\r\n    { name: 'phone', label: 'Téléphone : ', type: 'tel', placeholder: 'Entrer votre N° tel', required: true },\r\n    { name: 'email', label: 'Email : ', type: 'email', placeholder: 'Entrer votre email', required: true },\r\n    { name: 'siret', label: 'SIRET : ', type: 'text', placeholder: 'Entrer votre n° de SIRET', required: true },\r\n    // { name: 'category', label: 'Catégorie : ', type: 'select', apiEndpoint: '/api/categories', required: true },\r\n    // { name: 'sub_category', label: 'Sous Catégorie : ', type: 'select', apiEndpoint: '/api/subcategories', required: true },\r\n    { name: 'password', label: 'Mot de Passe : ', type: 'password', placeholder: 'Écrire votre mot de passe', required: true },\r\n    { name: 'confirm-password', label: 'Confirmer le Mot de Passe : ', type: 'password', placeholder: 'Retapez votre mot de passe', required: true },\r\n    { name: 'image', label: 'Photo de Profil : ', type: 'file', required: false },\r\n  ];\r\n\r\n  // Fonction de soumission\r\n  const handleSubmit = async (formData) => {\r\n    // Validation du mot de passe\r\n    if (formData.password !== formData['confirm-password']) {\r\n      setErrorMessage('Les mots de passe ne correspondent pas.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formDataToSend = new FormData();\r\n\r\n      // Ajouter chaque champ au FormData\r\n      for (const key in formData) {\r\n        if (formData[key] instanceof File) {\r\n          formDataToSend.append(key, formData[key]);\r\n        } else {\r\n          formDataToSend.append(key, formData[key]);\r\n        }\r\n      }\r\n\r\n      // Soumission des données via axios\r\n      const response = await axios.post(\r\n        'http://localhost:8000/registerTrader',\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data', // On utilise FormData pour envoyer les fichiers\r\n          },\r\n        }\r\n      );\r\n      setSuccessMessage(response.data.message);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      if (error.response && error.response.data.errors) {\r\n        setErrorMessage(error.response.data.errors.join(', '));\r\n      } else {\r\n        setErrorMessage('Une erreur est survenue lors de l\\'inscription du commerçant.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Inscription Commerçant</h2>\r\n      <MyForm fields={fields} onSubmit={handleSubmit} />\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTraderRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}