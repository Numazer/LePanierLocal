{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wampp\\\\SymfonyProjects\\\\LePanierLocal\\\\frontend\\\\src\\\\components\\\\MyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = ({\n  fields,\n  onSubmit\n}) => {\n  _s();\n  const [formData, setFormData] = useState(fields.reduce((acc, field) => {\n    acc[field.name] = '';\n    return acc;\n  }, {}));\n  const [errors, setErrors] = useState({});\n  const [selectOptions, setSelectOptions] = useState({});\n  const [subCategories, setSubCategories] = useState([]);\n  useEffect(() => {\n    fields.forEach(field => {\n      if (field.type === 'select' && field.apiEndpoint && !['sub_category'].includes(field.name)) {\n        fetch(`http://localhost:8000${field.apiEndpoint}`).then(response => response.json()).then(data => {\n          setSelectOptions(prevOptions => ({\n            ...prevOptions,\n            [field.name]: data\n          }));\n        }).catch(error => console.error(`Error fetching options for ${field.name}:`, error));\n      }\n    });\n  }, [fields]);\n  const handleCategoryChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Fetch sub-categories based on selected category\n    if (name === 'category') {\n      fetch(`http://localhost:8000/api/subcategories?category_id=${value}`).then(response => response.json()).then(data => {\n        setSubCategories(data);\n      }).catch(error => console.error('Error fetching sub-categories:', error));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validate = () => {\n    const newErrors = {};\n    fields.forEach(field => {\n      if (field.required && !formData[field.name]) {\n        newErrors[field.name] = `${field.label} is required`;\n      } else if (field.type === 'email' && !/\\S+@\\S+\\.\\S+/.test(formData[field.name])) {\n        newErrors[field.name] = 'Invalid email address';\n      } else if (field.name === 'confirm-password' && formData['password'] !== formData['confirm-password']) {\n        newErrors[field.name] = 'Passwords do not match';\n      }\n    });\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n    } else {\n      setErrors({});\n      onSubmit(formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [fields.map(field => {\n      var _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: field.name,\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), field.type === 'textarea' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: field.name,\n          value: formData[field.name],\n          onChange: handleChange,\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n          name: field.name,\n          value: formData[field.name],\n          onChange: field.name === 'category' ? handleCategoryChange : handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: [\"Select \", field.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), (_ref = field.name === 'sub_category' ? subCategories : selectOptions[field.name]) === null || _ref === void 0 ? void 0 : _ref.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name || option.amount\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field.type,\n          name: field.name,\n          value: formData[field.name],\n          onChange: handleChange,\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors[field.name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"g0jz+dGN0K0lN9kPIyVwm1Iy99k=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyForm","fields","onSubmit","_s","formData","setFormData","reduce","acc","field","name","errors","setErrors","selectOptions","setSelectOptions","subCategories","setSubCategories","forEach","type","apiEndpoint","includes","fetch","then","response","json","data","prevOptions","catch","error","console","handleCategoryChange","e","value","target","handleChange","validate","newErrors","required","label","test","handleSubmit","preventDefault","validationErrors","Object","keys","length","children","map","_ref","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","option","id","amount","_c","$RefreshReg$"],"sources":["D:/Wampp/SymfonyProjects/LePanierLocal/frontend/src/components/MyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MyForm = ({ fields, onSubmit }) => {\r\n  const [formData, setFormData] = useState(\r\n    fields.reduce((acc, field) => {\r\n      acc[field.name] = '';\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [selectOptions, setSelectOptions] = useState({});\r\n  const [subCategories, setSubCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fields.forEach((field) => {\r\n      if (field.type === 'select' && field.apiEndpoint && !['sub_category'].includes(field.name)) {\r\n        fetch(`http://localhost:8000${field.apiEndpoint}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setSelectOptions(prevOptions => ({\r\n              ...prevOptions,\r\n              [field.name]: data\r\n            }));\r\n          })\r\n          .catch(error => console.error(`Error fetching options for ${field.name}:`, error));\r\n      }\r\n    });\r\n  }, [fields]);\r\n\r\n  const handleCategoryChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    // Fetch sub-categories based on selected category\r\n    if (name === 'category') {\r\n      fetch(`http://localhost:8000/api/subcategories?category_id=${value}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setSubCategories(data);\r\n        })\r\n        .catch(error => console.error('Error fetching sub-categories:', error));\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    fields.forEach((field) => {\r\n      if (field.required && !formData[field.name]) {\r\n        newErrors[field.name] = `${field.label} is required`;\r\n      } else if (field.type === 'email' && !/\\S+@\\S+\\.\\S+/.test(formData[field.name])) {\r\n        newErrors[field.name] = 'Invalid email address';\r\n      } else if (field.name === 'confirm-password' && formData['password'] !== formData['confirm-password']) {\r\n        newErrors[field.name] = 'Passwords do not match';\r\n      }\r\n    });\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n    } else {\r\n      setErrors({});\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {fields.map((field) => (\r\n        <div key={field.name}>\r\n          <label htmlFor={field.name}>\r\n            {field.label}\r\n          </label>\r\n          {field.type === 'textarea' ? (\r\n            <textarea\r\n              name={field.name}\r\n              value={formData[field.name]}\r\n              onChange={handleChange}\r\n              placeholder={field.placeholder}\r\n            />\r\n          ) : field.type === 'select' ? (\r\n            <select\r\n              name={field.name}\r\n              value={formData[field.name]}\r\n              onChange={field.name === 'category' ? handleCategoryChange : handleChange}\r\n            >\r\n              <option value=\"\">Select {field.label}</option>\r\n              {(field.name === 'sub_category' ? subCategories : selectOptions[field.name])?.map((option) => (\r\n                <option key={option.id} value={option.id}>\r\n                  {option.name || option.amount}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          ) : (\r\n            <input\r\n              type={field.type}\r\n              name={field.name}\r\n              value={formData[field.name]}\r\n              onChange={handleChange}\r\n              placeholder={field.placeholder}\r\n            />\r\n          )}\r\n          {errors[field.name] && (\r\n            <div>{errors[field.name]}</div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button type=\"submit\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}