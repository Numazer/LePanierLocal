{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\LePanierLocal\\\\frontend\\\\src\\\\Components\\\\MyTraderRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MyForm from './MyForm';\nimport NavForm from './NavForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTraderRegister = () => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Champs pour le trader (commerçant)\n  const fields = [{\n    name: 'name',\n    label: 'Nom de la Boutique : ',\n    type: 'text',\n    placeholder: 'Entrer le nom de votre boutique',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email : ',\n    type: 'email',\n    placeholder: 'Entrer votre email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Mot de Passe : ',\n    type: 'password',\n    placeholder: 'Écrire votre mot de passe',\n    required: true\n  }, {\n    name: 'confirm-password',\n    label: 'Confirmer le Mot de Passe : ',\n    type: 'password',\n    placeholder: 'Retapez votre mot de passe',\n    required: true\n  }, {\n    name: 'confirm-password',\n    label: 'Confirmer le Mot de Passe : ',\n    type: 'password',\n    placeholder: 'Retapez votre mot de passe',\n    required: true\n  }];\n\n  // Fonction de soumission\n  const handleSubmit = async formData => {\n    // Validation du mot de passe\n    if (formData.password !== formData['confirm-password']) {\n      setErrorMessage('Les mots de passe ne correspondent pas.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/registerTrader', {\n        name: formData.name,\n        email: formData.email,\n        plainPassword: formData.password\n      }, {\n        headers: {\n          'Content-Type': 'application/ld+json'\n        }\n      });\n      setSuccessMessage(response.data.message);\n      setErrorMessage('');\n    } catch (error) {\n      if (error.response && error.response.data.errors) {\n        setErrorMessage(error.response.data.errors.join(', '));\n      } else {\n        setErrorMessage('Une erreur est survenue lors de l\\'inscription du commerçant.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inscription Commer\\xE7ant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyForm, {\n      fields: fields,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTraderRegister, \"GYTV4SY4xbg5C5qjssoxZ4/riWg=\");\n_c = MyTraderRegister;\nexport default MyTraderRegister;\nvar _c;\n$RefreshReg$(_c, \"MyTraderRegister\");","map":{"version":3,"names":["React","useState","axios","MyForm","NavForm","jsxDEV","_jsxDEV","MyTraderRegister","_s","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fields","name","label","type","placeholder","required","handleSubmit","formData","password","response","post","email","plainPassword","headers","data","message","error","errors","join","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","_c","$RefreshReg$"],"sources":["C:/wamp64/www/LePanierLocal/frontend/src/Components/MyTraderRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport MyForm from './MyForm';\r\nimport NavForm from './NavForm';\r\n\r\nconst MyTraderRegister = () => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Champs pour le trader (commerçant)\r\n  const fields = [\r\n    { name: 'name', label: 'Nom de la Boutique : ', type: 'text', placeholder: 'Entrer le nom de votre boutique', required: true },\r\n    { name: 'email', label: 'Email : ', type: 'email', placeholder: 'Entrer votre email', required: true },\r\n    { name: 'password', label: 'Mot de Passe : ', type: 'password', placeholder: 'Écrire votre mot de passe', required: true },\r\n    { name: 'confirm-password', label: 'Confirmer le Mot de Passe : ', type: 'password', placeholder: 'Retapez votre mot de passe', required: true },\r\n    { name: 'confirm-password', label: 'Confirmer le Mot de Passe : ', type: 'password', placeholder: 'Retapez votre mot de passe', required: true },\r\n  ];\r\n\r\n  // Fonction de soumission\r\n  const handleSubmit = async (formData) => {\r\n    // Validation du mot de passe\r\n    if (formData.password !== formData['confirm-password']) {\r\n      setErrorMessage('Les mots de passe ne correspondent pas.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:8000/registerTrader',\r\n        {\r\n          name: formData.name,\r\n          email: formData.email,\r\n          plainPassword: formData.password,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/ld+json',\r\n          },\r\n        }\r\n      );\r\n      setSuccessMessage(response.data.message);\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      if (error.response && error.response.data.errors) {\r\n        setErrorMessage(error.response.data.errors.join(', '));\r\n      } else {\r\n        setErrorMessage('Une erreur est survenue lors de l\\'inscription du commerçant.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavForm/>\r\n      <h2>Inscription Commerçant</h2>\r\n      <MyForm fields={fields} onSubmit={handleSubmit} />\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTraderRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}