{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\LePanierLocal\\\\frontend\\\\src\\\\Components\\\\MyLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MyForm from './MyForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyLogin = async ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  try {\n    const response = await axios.post('http://localhost:8000/login', {\n      email: email,\n      password: password\n    }, {\n      headers: {\n        \"Content-Type\": 'application/ld+json'\n      }\n    });\n    const token = response.data.token;\n    const user_id = response.data.user_id;\n    if (token) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('user_id', user_id);\n      setSuccessMessage(\"Login successful!\");\n    } else {\n      setErrorMessage(\"Token not received.\");\n    }\n    setEmail('');\n    setPassword('');\n  } catch (error) {\n    if (error.response && error.response.data.error) {\n      setErrorMessage('Probleme de connexion');\n    } else {\n      setErrorMessage('An error occurred during login.');\n    }\n  }\n  const fields = [{\n    name: 'email',\n    label: 'Email : ',\n    type: 'email',\n    placeholder: 'Entrer votre email',\n    required: false\n  }, {\n    name: 'password',\n    label: 'Password : ',\n    type: 'password',\n    placeholder: 'Ecrire votre mot de passe',\n    required: false\n  }];\n  const handleSubmit = formData => {\n    console.log('Form Data:', formData);\n  };\n  return /*#__PURE__*/_jsxDEV(MyForm, {\n    fields: fields,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(MyLogin, \"SRKwS6HA4ZV+jAWrWUbCofyAWto=\");\n_c = MyLogin;\nexport default MyLogin;\nvar _c;\n$RefreshReg$(_c, \"MyLogin\");","map":{"version":3,"names":["React","useState","MyForm","axios","jsxDEV","_jsxDEV","MyLogin","onLogin","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","response","post","headers","token","data","user_id","localStorage","setItem","error","fields","name","label","type","placeholder","required","handleSubmit","formData","console","log","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/LePanierLocal/frontend/src/Components/MyLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MyForm from './MyForm';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst MyLogin = async ({ onLogin }) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n\r\n  try {\r\n      const response = await axios.post(\r\n          'http://localhost:8000/login',\r\n          {\r\n              email: email,\r\n              password: password,\r\n          },\r\n          {\r\n              headers: {\r\n                  \"Content-Type\": 'application/ld+json',\r\n              },\r\n          }\r\n      );\r\n\r\n      const token = response.data.token;\r\n      const user_id = response.data.user_id;\r\n\r\n      if (token) {\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('user_id', user_id);\r\n          setSuccessMessage(\"Login successful!\");\r\n      } else {\r\n          setErrorMessage(\"Token not received.\");\r\n      }\r\n\r\n      setEmail('');\r\n      setPassword('');\r\n  } catch (error) {\r\n      if (error.response && error.response.data.error) {\r\n          setErrorMessage('Probleme de connexion');\r\n      } else {\r\n          setErrorMessage('An error occurred during login.');\r\n      }\r\n  }\r\n\r\n  const fields = [\r\n    { name: 'email', label: 'Email : ', type: 'email', placeholder: 'Entrer votre email', required: false  },\r\n    { name: 'password', label: 'Password : ', type: 'password', placeholder: 'Ecrire votre mot de passe', required: false  },\r\n  ];\r\n  \r\n  const handleSubmit = (formData) => {\r\n    console.log('Form Data:', formData); \r\n   }; \r\n  return (\r\n    \r\n      \r\n      <MyForm fields={fields} onSubmit={handleSubmit} />\r\n      \r\n  );\r\n};\r\n\r\nexport default MyLogin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,OAAO,GAAG,MAAAA,CAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAErC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGxD,IAAI;IACA,MAAMgB,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAC7B,6BAA6B,EAC7B;MACIT,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA;IACd,CAAC,EACD;MACIQ,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IAED,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACD,KAAK;IACjC,MAAME,OAAO,GAAGL,QAAQ,CAACI,IAAI,CAACC,OAAO;IAErC,IAAIF,KAAK,EAAE;MACPG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,OAAO,CAAC;MACxCN,iBAAiB,CAAC,mBAAmB,CAAC;IAC1C,CAAC,MAAM;MACHF,eAAe,CAAC,qBAAqB,CAAC;IAC1C;IAEAJ,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC,CAAC,OAAOa,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACR,QAAQ,IAAIQ,KAAK,CAACR,QAAQ,CAACI,IAAI,CAACI,KAAK,EAAE;MAC7CX,eAAe,CAAC,uBAAuB,CAAC;IAC5C,CAAC,MAAM;MACHA,eAAe,CAAC,iCAAiC,CAAC;IACtD;EACJ;EAEA,MAAMY,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE,oBAAoB;IAAEC,QAAQ,EAAE;EAAO,CAAC,EACxG;IAAEJ,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE,UAAU;IAAEC,WAAW,EAAE,2BAA2B;IAAEC,QAAQ,EAAE;EAAO,CAAC,CACzH;EAED,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;EACpC,CAAC;EACF,oBAGI5B,OAAA,CAACH,MAAM;IAACwB,MAAM,EAAEA,MAAO;IAACU,QAAQ,EAAEJ;EAAa;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAGxD,CAAC;AAAChC,EAAA,CAzDIF,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}